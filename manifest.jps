type: install
id: netbox
name: NetBox
homepage: https://github.com/netbox-community/netbox

categories:
  - apps/dev-and-admin-tools
  - apps/popular

description:
  text: "/texts/description.md?_r=1"
  short: "The premier source of truth powering network automation."

logo: /images/logo.png
baseUrl: https://raw.githubusercontent.com/Onemind-Services-LLC/netbox-jps/master

onBeforeInit: /scripts/beforeInit.js?_r=${fn.random}
onBeforeInstall: /scripts/beforeInstall.js?_r=${fn.random}

globals:
  dbPassword: ${fn.password}
  redisPassword: ${fn.password}
  apiToken: ${fn.password(40)}
  adminPassword: ${fn.password}
  secretKey: ${fn.password(50)}

nodes: definedInOnBeforeInstall

# Run setupHousekeeping on various events to ensure that the housekeeping script is always in place
onAfterScaleIn:
  - setupHousekeeping

onAfterAddNode:
  - setupHousekeeping

onInstall:
  - addLimits
  - createDb
  - if ('${settings.deploymentType}' == 'production'): setTriggers
  - upload:
      - nodeGroup: cp
        sourcePath: ${baseUrl}/config/plugins.py
        destPath: /etc/netbox/config/plugins.py
      - nodeGroup: cp
        sourcePath: ${baseUrl}/config/logging.py
        destPath: /etc/netbox/config/logging.py
      - nodeGroup: cp
        sourcePath: ${baseUrl}/config/configuration.py
        destPath: /etc/netbox/config/configuration.py
  - createFile[cp]: /etc/netbox/config/plugins.yaml
  - createDirectory[cp]:
      - path: /etc/netbox/scripts
      - path: /etc/netbox/reports
  - setupHousekeeping
  - install:
      - jps: /scripts/events.jps?_r=${fn.random}
  - nginxConfig

actions:
  addLimits:
    - env.control.ApplyNodeGroupData [bl, cp, sqldb, cache]:
        data:
          isRequired: true

  nginxConfig:
    - replaceInFile:
        nodeMission: bl
        path: /etc/nginx/nginx-jelastic.conf
        replacements:
          - pattern: large_client_header_buffers [0-9]* [0-9]*k;
            replacement: large_client_header_buffers 4 64k;
    - restartContainers:
        nodeGroup: bl

  setTriggers:
    - log: Auto Scaling Triggers
    - script: /scripts/addTriggers.js
      nodeGroup: cp
      resourceType: CPU
      loadGrowth: ${settings.loadGrowth}
      cleanOldTriggers: true
      scaleDownLimit: ${nodes.cp.length}

  createDb:
    - cmd[${nodes.sqldb.master.id}]: |-
        psql -U webadmin -d postgres -c "CREATE DATABASE netbox;"
        psql -U webadmin -d postgres -c "CREATE USER netbox WITH PASSWORD '${globals.dbPassword}';"
        psql -U webadmin -d postgres -c "ALTER DATABASE netbox OWNER TO netbox;"
        psql -U webadmin -d postgres -c "GRANT CREATE ON SCHEMA public TO netbox;"

  setupHousekeeping:
    - cmd[${nodes.cp.id}]: |-
        if [ ! -f /opt/netbox/housekeeping.sh ]; then
          cp -fv /opt/netbox/contrib/netbox-housekeeping.sh /etc/cron.daily/
        else
          cp -fv /opt/netbox/housekeeping.sh /etc/cron.daily/
        fi

success: /texts/success.md?_r=1
