type: install
id: netbox
name: NetBox
homepage: https://github.com/netbox-community/netbox

categories:
  - apps/dev-and-admin-tools
  - apps/popular

description:
  text: "/texts/description.md?_r=1"
  short: "The premier source of truth powering network automation."

logo: /images/logo.png
baseUrl: https://raw.githubusercontent.com/Onemind-Services-LLC/netbox-jps/master

onBeforeInit: /scripts/beforeInit.js?_r=${fn.random}
onBeforeInstall: /scripts/beforeInstall.js?_r=${fn.random}

globals:
  dbPassword: ${fn.password(20)}
  redisPassword: ${fn.password(20)}
  secretKey: ${fn.random(50)}
  apiToken: ${fn.random(50)}
  adminPassword: ${fn.password(20)}

nodes: definedInOnBeforeInstall

onInstall:
  - limits
  - setProtocol
  - setDomain
  - createDb
  - installYq
  - upload:
      - nodeGroup: cp
        sourcePath: ${baseUrl}/config/plugins.py
        destPath: /etc/netbox/config/plugins.py
  - createFile[cp]: /etc/netbox/config/plugins.yaml
  - createDirectory[cp]:
      - path: /etc/netbox/scripts
      - path: /etc/netbox/reports

actions:
  limits:
    - env.control.ApplyNodeGroupData[bl,cp,sqldb,storage,nosqldb,cache]:
        data:
          project: ${settings.project:default}
          projectScope: ${settings.projectScope:production}
          isRequired: true

  setProtocol:
    - script: |
        return {
          result:0,
          ssl: jelastic.billing.account.GetQuotas('environment.jelasticssl.enabled').array[0].value
        }
    - if (${response.ssl}):
        setGlobals:
          PROTOCOL: https

  setDomain:
    - script: /scripts/idna.js
      domains: ${env.domain}
    - setGlobals:
        DOMAIN: ${response.domains}

  createDb:
    - cmd[${nodes.sqldb.master.id}]: |-
        psql -U webadmin -d postgres -c "CREATE DATABASE netbox;"
        psql -U webadmin -d postgres -c "CREATE USER netbox WITH PASSWORD '${globals.dbPassword}';"
        psql -U webadmin -d postgres -c "ALTER DATABASE netbox OWNER TO netbox;"
        psql -U webadmin -d postgres -c "GRANT CREATE ON SCHEMA public TO netbox;"

  installYq:
    - cmd[${nodes.cp.id}]: |-
        wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
        chmod +x /usr/bin/yq

success: /text/success.md?_r=1
